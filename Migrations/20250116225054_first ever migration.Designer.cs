// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using petCare.Data;

#nullable disable

namespace petCare.Migrations
{
    [DbContext(typeof(petCareDatabase))]
    [Migration("20250116225054_first ever migration")]
    partial class firstevermigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("petCare.Models.BusUser", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employmentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("busUsers");
                });

            modelBuilder.Entity("petCare.Models.Pet", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<Guid?>("customerUserid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("customerUserid");

                    b.ToTable("pets");
                });

            modelBuilder.Entity("petCare.Models.Review", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("busUserid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("businessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customerUserid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stars")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("busUserid");

                    b.HasIndex("customerUserid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("petCare.Models.customerUser", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("customerUsers");
                });

            modelBuilder.Entity("petCare.Models.Pet", b =>
                {
                    b.HasOne("petCare.Models.customerUser", null)
                        .WithMany("pets")
                        .HasForeignKey("customerUserid");
                });

            modelBuilder.Entity("petCare.Models.Review", b =>
                {
                    b.HasOne("petCare.Models.BusUser", "busUser")
                        .WithMany("reviews")
                        .HasForeignKey("busUserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("petCare.Models.customerUser", "customerUser")
                        .WithMany("reviews")
                        .HasForeignKey("customerUserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("busUser");

                    b.Navigation("customerUser");
                });

            modelBuilder.Entity("petCare.Models.BusUser", b =>
                {
                    b.Navigation("reviews");
                });

            modelBuilder.Entity("petCare.Models.customerUser", b =>
                {
                    b.Navigation("pets");

                    b.Navigation("reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
